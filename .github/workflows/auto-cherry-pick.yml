name: Auto Cherry-Pick

on:
  pull_request:
    types: [closed]

jobs:
  cherry-pick:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history so we can cherry-pick

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.event.pull_request.merged_by.login }}"
          git config --global user.email "${{ steps.user_email.outputs.email }}"

      - name: Determine source and target branches
        id: vars
        run: |
          echo "::set-output name=SOURCE_BRANCH::${{ github.event.pull_request.base.ref }}"
          echo "::set-output name=TARGET_BRANCH::${{ github.event.pull_request.base.ref == 'template' && 'main' || 'template' }}"

      - name: Cherry-pick the commit to the target branch
        run: |
          git checkout ${{ steps.vars.outputs.TARGET_BRANCH }}
          git cherry-pick -m 1 ${{ github.event.pull_request.merge_commit_sha }}
        continue-on-error: true

      - name: Push changes
        if: success() # Only push if cherry-pick was successful
        run: |
          git push origin ${{ steps.vars.outputs.TARGET_BRANCH }}

      - name: Handle cherry-pick conflict
        if: failure() # Handle conflicts
        run: |
          git cherry-pick --abort
          git reset --hard
          echo "Cherry-pick conflict occurred. Manual intervention required."
